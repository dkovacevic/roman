server:
  requestLog:
    appenders:
      - type: ${APPENDER_TYPE:-console}
        filterFactories:
          - type: status-filter-factory

logging:
  level: INFO
  appenders:
    - type: ${APPENDER_TYPE:-console}
  loggers:
    "org.reflections.Reflections": ERROR
    "com.wire.bots.logger": ${LOG_LEVEL:-INFO}

swagger:
  resourcePackage: com.wire.bots.roman.resources
  schemes:
#    - http
    - https

jerseyClient:
  timeout: 40s
  connectionTimeout: 40s
  connectionRequestTimeout: 40s
  keepAlive: 0ms
  retries: 3
  userAgent: roman
  tls:
    protocol: TLSv1.2
    provider: SunJSSE
    supportedProtocols:
      - TLSv1.1
      - TLSv1.2

database:
  driverClass: org.postgresql.Driver
  url: ${DB_URL:-jdbc:postgresql://localhost/roman}
  user: ${DB_USER:-}
  password: ${DB_PASSWORD:-}
  baseline: ${DB_BASELINE:-}
  maxSize: 33

token: dummy
key: ${APP_KEY:-}
domain: ${PROXY_DOMAIN:-https://proxy.services.wire.com}
apiHost: ${WIRE_API_HOST:-https://prod-nginz-https.wire.com}

# if the proxy does not have access to its own domain, one needs to specify the
# TLS public key manually - either by adding it directly in base64
romanPubKeyBase64: ${ROMAN_PUB_KEY_BASE64:-}
# or by specifying the path to the file with the key
pathToRomanPubKey: ${PATH_TO_ROMAN_PUB_KEY:-}
# if both options are specified, the proxy uses the key defined in romanPubKeyBase64
